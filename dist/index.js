"use strict";var h=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var q=h(function(sr,P){P.exports={dims:null}});var T=h(function(ur,E){"use strict";var R=require("@stdlib/assert-is-plain-object"),B=require("@stdlib/assert-has-own-property"),L=require("@stdlib/assert-is-integer-array").primitives,G=require("@stdlib/assert-is-empty-collection"),H=require("@stdlib/ndarray-base-to-unique-normalized-indices"),b=require("@stdlib/array-base-join"),c=require("@stdlib/string-format");function J(r,e,i){var n;if(!R(i))return new TypeError(c("invalid argument. Options argument must be an object. Value: `%s`.",i));if(B(i,"dims")){if(r.dims=i.dims,!L(r.dims)&&!G(r.dims))return new TypeError(c("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(n=H(r.dims,e-1),n===null)return new RangeError(c("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",b(r.dims,",")));if(n.length!==r.dims.length)return new Error(c("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",b(r.dims,",")));r.dims=n}return null}E.exports=J});var _=h(function(or,j){"use strict";function K(r,e,i,n,s,t,m,l,p){var f,v,d,o;for(f=t,d=0;d<r;d++){for(v=p,o=0;o<e&&i[f+o*s]===m[v];o++)v+=l;if(o===e)return d;f+=n}return-1}j.exports=K});var N=h(function(vr,I){"use strict";var Q=require("@stdlib/utils-define-nonenumerable-read-only-property"),O=require("@stdlib/assert-has-property"),x=require("@stdlib/assert-is-ndarray-like"),U=require("@stdlib/assert-is-object"),W=require("@stdlib/assert-is-function"),y=require("@stdlib/assert-is-collection"),F=require("@stdlib/assert-is-empty-collection"),X=require("@stdlib/assert-is-function-array"),k=require("@stdlib/ndarray-base-assert-is-data-type"),V=require("@stdlib/array-base-assert-contains"),A=require("@stdlib/ndarray-base-nullary-strided1d"),z=require("@stdlib/ndarray-base-dtype-resolve-enum"),Y=require("@stdlib/ndarray-ndims"),D=require("@stdlib/ndarray-base-dtype"),Z=require("@stdlib/array-base-zero-to"),S=require("@stdlib/array-base-join"),$=require("@stdlib/array-base-copy"),C=require("@stdlib/array-base-every-by"),M=require("@stdlib/object-assign"),u=require("@stdlib/string-format"),rr=q(),er=T(),ir=_();function ar(r){var e,i;for(e=[],i=0;i<r.length;i++)e.push(z(r[i]));return e}function g(r,e,i,n){var s,t;if(!(this instanceof g))return arguments.length>3?new g(r,e,i,n):new g(r,e,i);if(!U(r))throw new TypeError(u("invalid argument. First argument must be an object. Value: `%s`.",r));if(!W(r.default))throw new TypeError(u('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(O(r,"types")&&!y(r.types)&&!F(r.types))throw new TypeError(u('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(O(r,"fcns")&&!X(r.fcns)&&!F(r.fcns))throw new TypeError(u('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!y(e))throw new TypeError(u("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(t=0;t<e.length;t++)if(s=e[t],!y(s)||s.length<1||!C(s,k))throw new TypeError(u("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!y(i)||i.length<1||!C(i,k))throw new TypeError(u("invalid argument. Third argument must be an array of data types. Value: `%s`.",i));if(this._table={default:r.default,types:r.types?ar(r.types):[],fcns:r.fcns?$(r.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An output ndarray data type must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=i,arguments.length>3?this._apply=A.factory(n):this._apply=A,this}Q(g.prototype,"assign",function(e){var i,n,s,t,m,l,p,f,v,d,o,w,a;if(s=arguments.length,!x(e))throw new TypeError(u("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(v=D(e),!V(this._odtypes,v))throw new TypeError(u('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',S(this._odtypes,'", "'),v));for(m=[e],a=1;a<s&&(l=arguments[a],!!x(l));a++)m.push(l);if(a===s-1)i=arguments[a],f=!0;else if(a<s-1)throw new TypeError(u("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",a,arguments[a]));for(a=1;a<m.length;a++)if(d=D(m[a]),!V(this._idtypes[a-1],d))throw new TypeError(u('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',a,S(this._idtypes[a-1],'", "'),d));if(o=Y(e),t=M({},rr),f&&(p=er(t,o,i),p))throw p;return t.dims===null&&(t.dims=Z(o)),n=[z(v)],a=ir(this._table.fcns.length,1,this._table.types,1,1,0,n,1,0),a>=0?w=this._table.fcns[a]:w=this._table.default,this._apply(w,m,t.dims),e});I.exports=g});var nr=N();module.exports=nr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
