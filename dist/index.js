"use strict";var c=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var q=c(function(sr,N){N.exports={dims:null}});var T=c(function(ur,E){"use strict";var P=require("@stdlib/assert-is-plain-object"),R=require("@stdlib/assert-has-own-property"),B=require("@stdlib/assert-is-integer-array").primitives,L=require("@stdlib/assert-is-empty-collection"),G=require("@stdlib/ndarray-base-to-unique-normalized-indices"),b=require("@stdlib/array-base-join"),h=require("@stdlib/string-format");function H(r,e,a){var n;if(!P(a))return new TypeError(h("invalid argument. Options argument must be an object. Value: `%s`.",a));if(R(a,"dims")){if(r.dims=a.dims,!B(r.dims)&&!L(r.dims))return new TypeError(h("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(n=G(r.dims,e-1),n===null)return new RangeError(h("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",b(r.dims,",")));if(n.length!==r.dims.length)return new Error(h("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",b(r.dims,",")));r.dims=n}return null}E.exports=H});var _=c(function(or,j){"use strict";function J(r,e,a,n,s,t,m,l,p){var f,d,v,o;for(f=t,v=0;v<r;v++){for(d=p,o=0;o<e&&a[f+o*s]===m[d];o++)d+=l;if(o===e)return v;f+=n}return-1}j.exports=J});var I=c(function(dr,z){"use strict";var K=require("@stdlib/utils-define-nonenumerable-read-only-property"),O=require("@stdlib/assert-has-property"),x=require("@stdlib/assert-is-ndarray-like"),Q=require("@stdlib/assert-is-object"),U=require("@stdlib/assert-is-function"),y=require("@stdlib/assert-is-collection"),F=require("@stdlib/assert-is-empty-collection"),W=require("@stdlib/assert-is-function-array"),k=require("@stdlib/ndarray-base-assert-is-data-type"),V=require("@stdlib/array-base-assert-contains"),A=require("@stdlib/ndarray-base-nullary-strided1d"),X=require("@stdlib/ndarray-base-dtype-resolve-enum"),Y=require("@stdlib/ndarray-base-dtypes2enums"),Z=require("@stdlib/ndarray-ndims"),D=require("@stdlib/ndarray-base-dtype"),$=require("@stdlib/array-base-zero-to"),S=require("@stdlib/array-base-join"),M=require("@stdlib/array-base-copy"),C=require("@stdlib/array-base-every-by"),rr=require("@stdlib/object-assign"),u=require("@stdlib/string-format"),er=q(),ir=T(),ar=_();function g(r,e,a,n){var s,t;if(!(this instanceof g))return arguments.length>3?new g(r,e,a,n):new g(r,e,a);if(!Q(r))throw new TypeError(u("invalid argument. First argument must be an object. Value: `%s`.",r));if(!U(r.default))throw new TypeError(u('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(O(r,"types")&&!y(r.types)&&!F(r.types))throw new TypeError(u('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(O(r,"fcns")&&!W(r.fcns)&&!F(r.fcns))throw new TypeError(u('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!y(e))throw new TypeError(u("invalid argument. Second argument must be an array-like object. Value: `%s`.",e));for(t=0;t<e.length;t++)if(s=e[t],!y(s)||s.length<1||!C(s,k))throw new TypeError(u("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",e));if(!y(a)||a.length<1||!C(a,k))throw new TypeError(u("invalid argument. Third argument must be an array of data types. Value: `%s`.",a));if(this._table={default:r.default,types:r.types?Y(r.types):[],fcns:r.fcns?M(r.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An output ndarray data type must be specified for each provided strided function.");return this._idtypes=e,this._odtypes=a,arguments.length>3?this._apply=A.factory(n):this._apply=A,this}K(g.prototype,"assign",function(e){var a,n,s,t,m,l,p,f,d,v,o,w,i;if(s=arguments.length,!x(e))throw new TypeError(u("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",e));if(d=D(e),!V(this._odtypes,d))throw new TypeError(u('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',S(this._odtypes,'", "'),d));for(m=[e],i=1;i<s&&(l=arguments[i],!!x(l));i++)m.push(l);if(i===s-1)a=arguments[i],f=!0;else if(i<s-1)throw new TypeError(u("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",i,arguments[i]));for(i=1;i<m.length;i++)if(v=D(m[i]),!V(this._idtypes[i-1],v))throw new TypeError(u('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',i,S(this._idtypes[i-1],'", "'),v));if(o=Z(e),t=rr({},er),f&&(p=ir(t,o,a),p))throw p;return t.dims===null&&(t.dims=$(o)),n=[X(d)],i=ar(this._table.fcns.length,1,this._table.types,1,1,0,n,1,0),i>=0?w=this._table.fcns[i]:w=this._table.default,this._apply(w,m,t.dims),e});z.exports=g});var nr=I();module.exports=nr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
